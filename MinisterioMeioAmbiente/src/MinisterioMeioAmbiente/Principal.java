package MinisterioMeioAmbiente;

import java.awt.Font;
import java.awt.Toolkit;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.io.File;
import java.io.FileOutputStream;
import java.io.IOException;

import javax.swing.GroupLayout;
import javax.swing.GroupLayout.Alignment;
import javax.swing.JButton;
import javax.swing.JOptionPane;
import javax.swing.LayoutStyle.ComponentPlacement;

import com.sun.jna.Pointer;
import com.sun.jna.ptr.IntByReference;

public class Principal extends javax.swing.JFrame {
    
	/**
	 *@author Carlos Rhedney
	 */
	private static final long serialVersionUID = 1L;
	private static byte[] buffer;
    private static byte[] buffer2;

    /**
     * Creates new form Principal
     */
    public Principal() {
    	setIconImage(Toolkit.getDefaultToolkit().getImage(Principal.class.getResource("/MinisterioMeioAmbienteImg/aps.png")));
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form. WARNING: Do NOT modify this code. The content of this method is always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        btnDedo1 = new javax.swing.JButton();
        lblVersao = new javax.swing.JLabel();
        btnComparar = new javax.swing.JButton();
        btnDedo2 = new javax.swing.JButton();
        btnVersao = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        btnCancelarLeitura = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Leitor de Biometria Nível 2");
        setResizable(false);
        
        //Botão leitura da digital
        btnDedo1.setText("Ler Digital");
        btnDedo1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDedo1ActionPerformed(evt);
            }
        });
        
        //Label com aviso "Versão SDK"
        lblVersao.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        lblVersao.setText("Versão SDK");
        
        //Botão que compara as digitais capturadas
        btnComparar.setFont(new Font("Tahoma", Font.BOLD, 11)); // NOI18N
        btnComparar.setText("Verificação das digitais");
        btnComparar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCompararActionPerformed(evt);
            }
        });
        
        //Botão leitura da confirmação da digital
        btnDedo2.setText("Confirmar Digital");
        btnDedo2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDedo2ActionPerformed(evt);
            }
        });
        
        //Botão que confere a versão das DLL´s
        btnVersao.setText("Ler DLL (Versão SDK)");
        btnVersao.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnVersaoActionPerformed(evt);
            }
        });
        
        //Label com aviso "Ler e comprar as digitais"
        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel1.setText("Ler e Confirmar as digitais");
        
        //Label com aviso "Teste de conexão com a DLL"
        jLabel2.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel2.setText("Teste de conexão com a DLL");
        
        //Botão que cancela a leitura das digitais
        btnCancelarLeitura.setText("Cancelar leitura");
        btnCancelarLeitura.setEnabled(false);
        btnCancelarLeitura.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCancelarLeituraActionPerformed(evt);
            }
        });
        
        //Botão Sair
        JButton btnSair = new JButton("Sair");
        btnSair.addActionListener(new ActionListener() {
        	public void actionPerformed(ActionEvent e) {
        		dispose();
        	}
        });
        btnSair.setFont(new Font("Tahoma", Font.BOLD, 11));
        //Layout
        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        layout.setHorizontalGroup(
        	layout.createParallelGroup(Alignment.LEADING)
        		.addGroup(layout.createSequentialGroup()
        			.addGap(19)
        			.addGroup(layout.createParallelGroup(Alignment.TRAILING)
        				.addGroup(layout.createSequentialGroup()
        					.addComponent(btnVersao, GroupLayout.PREFERRED_SIZE, 166, GroupLayout.PREFERRED_SIZE)
        					.addGap(18)
        					.addComponent(lblVersao)
        					.addGap(0, 339, Short.MAX_VALUE))
        				.addGroup(layout.createSequentialGroup()
        					.addGroup(layout.createParallelGroup(Alignment.LEADING)
        						.addComponent(jLabel1)
        						.addComponent(jLabel2))
        					.addContainerGap(404, Short.MAX_VALUE))
        				.addGroup(layout.createSequentialGroup()
        					.addGroup(layout.createParallelGroup(Alignment.TRAILING)
        						.addComponent(btnDedo1, Alignment.LEADING, GroupLayout.DEFAULT_SIZE, 213, Short.MAX_VALUE)
        						.addComponent(btnCancelarLeitura, Alignment.LEADING, GroupLayout.DEFAULT_SIZE, 213, Short.MAX_VALUE)
        						.addComponent(btnDedo2, GroupLayout.DEFAULT_SIZE, 213, Short.MAX_VALUE))
        					.addGap(18)
        					.addGroup(layout.createParallelGroup(Alignment.LEADING, false)
            					.addComponent(btnSair, GroupLayout.DEFAULT_SIZE, GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            					.addComponent(btnComparar, GroupLayout.DEFAULT_SIZE, 167, Short.MAX_VALUE))
            				.addContainerGap(208, Short.MAX_VALUE))))
        );
        layout.setVerticalGroup(
        	layout.createParallelGroup(Alignment.LEADING)
        		.addGroup(layout.createSequentialGroup()
        			.addGap(17)
        			.addComponent(jLabel2)
        			.addPreferredGap(ComponentPlacement.RELATED)
        			.addGroup(layout.createParallelGroup(Alignment.BASELINE)
        				.addComponent(btnVersao)
        				.addComponent(lblVersao))
        			.addGap(23)
        			.addComponent(jLabel1)
        			.addPreferredGap(ComponentPlacement.RELATED)
        			.addGroup(layout.createParallelGroup(Alignment.BASELINE)
        				.addComponent(btnDedo1, GroupLayout.PREFERRED_SIZE, 48, GroupLayout.PREFERRED_SIZE)
        				.addComponent(btnComparar, GroupLayout.PREFERRED_SIZE, 44, GroupLayout.PREFERRED_SIZE))
        			.addPreferredGap(ComponentPlacement.RELATED)
        			.addGroup(layout.createParallelGroup(Alignment.LEADING, false)
        				.addComponent(btnSair, GroupLayout.DEFAULT_SIZE, GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        				.addComponent(btnDedo2, GroupLayout.DEFAULT_SIZE, 45, Short.MAX_VALUE))
        			.addPreferredGap(ComponentPlacement.RELATED)
        			.addComponent(btnCancelarLeitura)
        			.addContainerGap(27, Short.MAX_VALUE))
        );
        getContentPane().setLayout(layout);

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents
    
    //Metodo do botão que captura a primeira digital
    private void btnDedo1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDedo1ActionPerformed
        // TODO add your handling code here:

        //Instanciar a DLL
        CisBiox dll = new CisBiox();

        int iRetorno = dll.iniciar();
        
        if (iRetorno != 1) {
            JOptionPane.showMessageDialog(null, "Erro: " + Integer.toString(iRetorno), "Erro", JOptionPane.ERROR_MESSAGE);
            return;
        }

        btnCancelarLeitura.setEnabled(true);

        new Thread(LerDigital1).start();
    }//GEN-LAST:event_btnDedo1ActionPerformed
    
    //Metodo do botão que captura a primeira digital
    private static Runnable LerDigital1 = new Runnable() {
        @Override
        public void run() {
          
                //Instanciar a DLL
                CisBiox dll = new CisBiox();

                //Capturar a digital no leitor   
                buffer = dll.capturarDigital();

                if (dll.getResultado() != 1) {
                    dll.finalizar();
                    JOptionPane.showMessageDialog(null, "Erro: " + Integer.toString(dll.getResultado()), "Erro", JOptionPane.ERROR_MESSAGE);
                    return;
                }

                //Finalizar o SDK        
                int iRetorno = dll.finalizar();
                if (iRetorno != 1) {
                    JOptionPane.showMessageDialog(null, "Erro: " + Integer.toString(iRetorno), "Erro", JOptionPane.ERROR_MESSAGE);
                    return;
                }

                JOptionPane.showMessageDialog(null, "Template gerado!", "Informação", JOptionPane.INFORMATION_MESSAGE);
           
        }
    

    };    
        
    //Metodo botão que compara as digitais capturadas
    private void btnCompararActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCompararActionPerformed
        // TODO add your handling code here:

        //Instanciar a DLL
        CisBiox dll = new CisBiox();

        dll.iniciar();
 
        if (dll.getResultado() == 1) {
            lblVersao.setText(dll.versao());
        } else {
            JOptionPane.showMessageDialog(null, "Erro: " + Integer.toString(dll.getResultado()), "Erro", JOptionPane.ERROR_MESSAGE);
            return;
        }

        int iRetorno = dll.compararDigital(buffer, buffer2);
        
        if (iRetorno == 1) {
            JOptionPane.showMessageDialog(null, "As digitais são iguais", "Informação", JOptionPane.INFORMATION_MESSAGE);
            TelaApresentaCadastroProprietarioAgrotoxico frame = new TelaApresentaCadastroProprietarioAgrotoxico();
            frame.setVisible(true);
        } else if (iRetorno == -2) {
            JOptionPane.showMessageDialog(null, "As digitais são diferentes", "Alerta", JOptionPane.WARNING_MESSAGE);
        } else {
            JOptionPane.showMessageDialog(null, "Erro: " + Integer.toString(iRetorno), "Erro", JOptionPane.ERROR_MESSAGE);
        }

        //Finalizar o SDK 
        
        if (dll.finalizar() != 1) {
            JOptionPane.showMessageDialog(null, "Erro: " + Integer.toString(iRetorno), "Erro", JOptionPane.ERROR_MESSAGE);
            return;
        }
    }//GEN-LAST:event_btnCompararActionPerformed
    
    //Metodo do botão que verifica a versão da DLL
    private void btnVersaoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnVersaoActionPerformed
        // TODO add your handling code here:

        //Instanciar a DLL
        CisBiox dll = new CisBiox();

        lblVersao.setText("CIS SDK - v." + dll.versao());


    }//GEN-LAST:event_btnVersaoActionPerformed
    
    //Metodo do botão que captura a segunda digital
    private void btnDedo2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDedo2ActionPerformed
        // TODO add your handling code here:
        //Instanciar a DLL
        CisBiox dll = new CisBiox();

        int iRetorno = dll.iniciar();
        if (iRetorno != 1) {
            JOptionPane.showMessageDialog(null, "Erro: " + Integer.toString(iRetorno), "Erro", JOptionPane.ERROR_MESSAGE);
            return;
        }

        btnCancelarLeitura.setEnabled(true);

        new Thread(LerDigital2).start();
    }//GEN-LAST:event_btnDedo2ActionPerformed
    
    //Metodo do botão que captura a segunda digital
    private static Runnable LerDigital2 = new Runnable() {
        @Override
        public void run() {
           
                //Instanciar a DLL
                CisBiox dll = new CisBiox();

                //Capturar a digital no leitor   
                buffer2 = dll.capturarDigital();

                if (dll.getResultado() != 1) {
                    dll.finalizar();
                    JOptionPane.showMessageDialog(null, "Erro: " + Integer.toString(dll.getResultado()), "Erro", JOptionPane.ERROR_MESSAGE);
                    return;
                }
               
                //Finalizar o SDK        
                int iRetorno = dll.finalizar();
                if (iRetorno != 1) {
                    JOptionPane.showMessageDialog(null, "Erro: " + Integer.toString(iRetorno), "Erro", JOptionPane.ERROR_MESSAGE);
                    return;
                }

                JOptionPane.showMessageDialog(null, "Template gerado!", "Informação", JOptionPane.INFORMATION_MESSAGE);
            
        }
    ;

    };    
    
    //Metodo botão cancelar a leitura das digitais
    private void btnCancelarLeituraActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCancelarLeituraActionPerformed
        // TODO add your handling code here:

        //Instanciar a DLL
        CisBiox dll = new CisBiox();

        //Cancelar a leitura 
        dll.cancelarLeitura();

        btnCancelarLeitura.setEnabled(false);
    }//GEN-LAST:event_btnCancelarLeituraActionPerformed

    private static Runnable LerWSQ = new Runnable() {
        public void run() {
            try {
                //Instanciar a DLL
                CisBiox dll = new CisBiox();

                //Capturar a imagem da digital em WSQ  
                Pointer pImagem;
                IntByReference iRet = new IntByReference();
                IntByReference iSize = new IntByReference();
                pImagem = dll.lerDigitalLerWSQ(iRet, iSize);
                int iRetorno2 = iRet.getValue();
                if (iRetorno2 == 0) {
                    return;
                }
                if (iRetorno2 != 1) {
                    dll.finalizar();
                    JOptionPane.showMessageDialog(null, "Erro: " + Integer.toString(iRetorno2), "Erro", JOptionPane.ERROR_MESSAGE);
                    return;
                }
                byte[] buffer = pImagem.getByteArray(0, iSize.getValue());

                //Criar a pasta e apagar a imagem anterior
                new File("C:/CIS_SDK/IMAGENS").mkdir();
                File file = new File("C:/CIS_SDK/IMAGENS/Imagem.wsq");
                file.delete();

                //Gravar a imagem em um arquivo
                File arquivo = new File("C:/CIS_SDK/IMAGENS/Imagem.wsq");
                try (FileOutputStream arq = new FileOutputStream(arquivo)) {
                    arq.write(buffer);
                    arq.flush();
                    arq.close();
                } catch (IOException e) {
                    e.printStackTrace();
                    JOptionPane.showMessageDialog(null, "Erro !!! ", "Erro", JOptionPane.ERROR_MESSAGE);
                }

                //Finalizar o SDK        
                int iRetorno = dll.finalizar();
                if (iRetorno != 1) {
                    JOptionPane.showMessageDialog(null, "Erro: " + Integer.toString(iRetorno), "Erro", JOptionPane.ERROR_MESSAGE);
                    return;
                }

                JOptionPane.showMessageDialog(null, "Imagem gerada!", "Informação", JOptionPane.INFORMATION_MESSAGE);

            } catch (Exception e) {
            }
        }
    };

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Principal().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnCancelarLeitura;
    private javax.swing.JButton btnComparar;
    private javax.swing.JButton btnDedo1;
    private javax.swing.JButton btnDedo2;
    private javax.swing.JButton btnVersao;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel lblVersao;
}